#!/usr/bin/env node

var data = {};

// Load basic info.
data.tracks = require('../data/tracks.json');
data.artists = require('../data/artists.json');
data.individuals = require('../data/individuals.json');
data.releases = require('../data/releases.json');

// Load relation data
data.at = require('../data/artist_track.json');
data.ia = require('../data/individual_artist.json');
data.it = require('../data/individual_track.json');
data.tr = require('../data/track_release.json');

data.printTrackInfo = function (track) {
  console.log('Track ID: ' + track.id);

  track.names.forEach(function (title) {
    console.log('\tTitle: ' + title);
  });

  data.printRelatedInfoForTrack({
    trackId: track.id,
    relatedInfo: 'artists',
    relatedField: 'names',
    relationData: 'at',
    relationDataId: 'artistId',
    label: 'Artist',
  });

  data.printRelatedInfoForTrack({
    trackId: track.id,
    relatedInfo: 'releases',
    relatedField: 'names',
    relationData: 'tr',
    relationDataId: 'releaseId',
    label: 'Release',
  });

  data.printRelatedInfoForTrack({
    trackId: track.id,
    relatedInfo: 'individuals',
    relatedField: 'names',
    additionalInfo: 'credits',
    relationData: 'it',
    relationDataId: 'individualId',
    label: 'Individual',
  });
};

data.printRelatedInfoForTrack = function (options) {

  var extras={};

  // Get all the entries from the relation data structure that are related to this one.
  var relatedIdsAndExtra = data[options.relationData].filter(function (value) {
    return value.trackId === options.trackId;
  });

  // If we want additional info (like credits), grab that now too.
  if (options.additionalInfo) {
    for (var i=0, l=relatedIdsAndExtra.length; i<l; i++) {
      extras[relatedIdsAndExtra[i][options.relationDataId]] =  relatedIdsAndExtra[i][options.additionalInfo] || [];
    }
  }

  // Strip down to just the IDs we requested.
  var relatedIds = relatedIdsAndExtra.map(function (value) {
    return value[options.relationDataId];
  });

  // Get the actual data we want specified by the related IDs.
  var relatedData = data[options.relatedInfo].filter(function (value) {
    return relatedIds.indexOf(value.id) > -1;
  });

  relatedData.forEach(function (value) {
    var extra = '';
    if (extras[value.id] && extras[value.id].length>0) {
      extra = ' (' + extras[value.id].join(', ') + ')';
    }
    for (var i=0, l=value[options.relatedField].length; i<l; i++) {
      console.log('\t' + options.label + ': ' + value[options.relatedField][i] + extra + ' [' + value.id + ']');
    }
  });
};

data.tracks.forEach(data.printTrackInfo);
